% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hyperG.R
\name{hyperG}
\alias{hyperG}
\title{Computes Gene Ontology enrichment using the hypergeometric test}
\usage{
hyperG(
  querySet,
  geneSets,
  uni,
  scoreMat,
  minSetSize = 5,
  maxSetSize = 300,
  uniSize = NA
)
}
\arguments{
\item{querySet}{Character vector of genes in the query set with significant fitness scores.}

\item{geneSets}{List of gene sets (pathways or processes), each represented as a character vector of gene symbols.}

\item{uni}{Character vector of genes in the universe (background set). If NULL, `uniSize` must be specified.}

\item{scoreMat}{Data frame of gene scores. The first column is `gene`, the second column (`index`) indicates significance (1 for significant, 0 otherwise), and the third column is `score`, representing fitness scores in descending order. Can be NULL.}

\item{minSetSize}{Numeric, lower limit on the number of genes in a gene set included in the analysis after restricting to the universe.}

\item{maxSetSize}{Numeric, upper limit on the number of genes in a gene set included in the analysis after restricting to the universe.}

\item{uniSize}{Numeric, the number of genes in the universe or length of `uni` if `uni` is provided.}
}
\value{
Data frame of enrichment results, sorted by increasing FDR value.
\describe{
  \item{term}{The name of the gene set.}
  \item{querySetFraction}{Fraction of genes in the query set that are also in the gene set.}
  \item{geneSetFraction}{Fraction of the gene set that overlaps with the query set.}
  \item{foldEnrichment}{Fold enrichment of the query set with the term genes.}
  \item{P}{P-value estimating the significance with which the query set is enriched with the term genes.}
  \item{FDR}{False discovery rate (adjusted P-value) for the enrichment significance.}
  \item{overlapGenes}{`|-` separated list of genes in the overlap between the query set and the term set.}
  \item{maxOverlapGeneScore}{Maximum fitness score among the overlapping genes.}
}
}
\description{
Computes Gene Ontology enrichment using the hypergeometric test
}
\examples{
queryGenes.mn <- sort(unique(scoreMat$gene[which(scoreMat$index == 1)]))
uniGenes.mn <- sort(unique(scoreMat$gene[!is.na(scoreMat$score)]))
enrichMat.mn <- hyperG(querySet = queryGenes.mn, geneSets = hGOBP.gmt, uni = uniGenes.mn, scoreMat = score, minSetSize = minSetSize)
}
