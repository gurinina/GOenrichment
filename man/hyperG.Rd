% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hyperG.R
\name{hyperG}
\alias{hyperG}
\title{The `hyperG` function evaluates a matrix of fitness scores to identify
genes with scores above a specified significance threshold.}
\usage{
hyperG(
  querySet,
  geneSets,
  uni,
  scoreMat,
  minSetSize = 5,
  maxSetSize = 300,
  uniSize = NA
)
}
\arguments{
\item{querySet}{character vector of genes in query set, genes with significant fitness defect scores}

\item{geneSets}{A numeric index specifying the column of `mat` to analyze for significance.}

\item{uni}{Character vector of genes in the universe (i.e. background set) - if NULL, must specify uniSize}

\item{scoreMat}{Dataframe of gene scores - first column = gene; column - second column = index, 1 and 0s designating significance - third column = fitness scores, descending order - can be NULL
see function `compSCORE`}

\item{minSetSize}{Lower limit on the number of genes in a geneset included in the analysis (after restricting to the gene universe)}

\item{maxSetSize}{Upper limit on the number of genes in a geneset included in the analysis (after restricting to the gene universe)}

\item{uniSize}{The number of genes in the universe or length(uni)}
}
\value{
Dataframe of enrichment results, sorted by increasing FDR value
if scoreMat is provided (not NULL), the scores of the genes are shown in parentheses maxOverlapGeneScore = if scoreMat is provided (not NULL), the maximum score of the overlapGenes
\describe{
  \item{querySetFraction}{the fraction of the query set that overlaps with the term set}
  \item{geneSetFraction}{the fraction of the term set that overlaps with the query set}
  \item{foldEnrichment}{the fold enrichment of the query set with the term genes}
  \item{P}{P value estimating the significance with which the query set is enriched with the term genes
FDR = FDR value estimating the significance of enrichment}
  \item{FDR}{FDR value estimating the significance of enrichment }
  \item{overlapGenes}{A |-separated list of genes in the overlap of the query set and the term set}
}
}
\description{
The `hyperG` function evaluates a matrix of fitness scores to identify
genes with scores above a specified significance threshold.
}
\examples{
# Example usage:
mat <- matrix(c(0.5, 1.2, 1.5, 0.8, 1.8, 0.3), nrow = 3, byrow = TRUE)
rownames(mat) <- c("Gene1", "Gene2", "Gene3")
scoreMat <- compSCORE(mat, coln = 2, sig = 1)
queryGenes.mn <- sort(unique(scoreMat$gene[which(scoreMat$index >= 1)]))
uniGenes.mn <- sort(unique(scoreMat$gene[!is.na(scoreMat$score)]))
enrichMat.mn <- hyperG(querySet = queryGenes.mn, geneSets = hGOBP.gmt,
}
