% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hyperG.R
\name{hyperG}
\alias{hyperG}
\title{Ccomputes Gene ontology enrichment using the hypergeometric test
The `hyperG` function evaluates a matrix of fitness scores to identify
genes with scores above a specified significance threshold.}
\usage{
hyperG(
  querySet,
  geneSets,
  uni,
  scoreMat,
  minSetSize = 5,
  maxSetSize = 300,
  uniSize = NA
)
}
\arguments{
\item{querySet}{character vector of genes in query set, genes with significant fitness defect scores}

\item{geneSets}{A numeric index specifying the column of `mat` to analyze for significance.}

\item{uni}{Character vector of genes in the universe (i.e. background set) - if NULL, must specify uniSize}

\item{scoreMat}{Dataframe of gene scores - first column = gene; column - second column = index, 1 and 0s designating significance - third column = fitness scores, descending order - can be NULL
see function `compSCORE`}

\item{minSetSize}{Lower limit on the number of genes in a geneset included in the analysis (after restricting to the gene universe)}

\item{maxSetSize}{Upper limit on the number of genes in a geneset included in the analysis (after restricting to the gene universe)}

\item{uniSize}{The number of genes in the universe or length(uni)}
}
\value{
Dataframe of enrichment results, sorted by increasing FDR value.
\describe{
  \item{index}{A binary indicator of significance: 1 if the score is significant, 0 otherwise.}
  \item{score}{The fitness score of the gene in the specified column.}
  \item{gene}{The name of the gene, taken from the row names of `mat`.}
}
}
\description{
Ccomputes Gene ontology enrichment using the hypergeometric test
The `hyperG` function evaluates a matrix of fitness scores to identify
genes with scores above a specified significance threshold.
}
\examples{
# Example usage:
mat <- matrix(c(0.5, 1.2, 1.5, 0.8, 1.8, 0.3), nrow = 3, byrow = TRUE)
rownames(mat) <- c("Gene1", "Gene2", "Gene3")
hyperG(mat, coln = 2, sig = 1)
}
